<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="ManageOrder_1_0_UnitTest" soapui-version="3.5.1" abortOnError="false" runType="SEQUENTIAL" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface name="ManageOrderBinding" bindingName="{http://soa.o2.co.uk/manageorderservice_1}ManageOrderBinding" soapVersion="1_1" definition="http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/manageorderservice_1_0.wsdl" xsi:type="con:WsdlInterface" wsaVersion="NONE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoints><con:endpoint>http://ogre.dev.o2.co.uk:8080/services/ManageOrder_1_0</con:endpoint><con:endpoint>https://sdpapi.o2.co.uk/services/ManageOrder_1_0</con:endpoint><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="getOrderDetails" bindingOperationName="getOrderDetails" inputName="getOrderDetails" outputName="getOrderDetailsResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ogre.dev.o2.co.uk:8080/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>?</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>?</man:orderNumber>
         <man:msisdn>?</man:msisdn>
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="getOrderList" bindingOperationName="getOrderList" inputName="getOrderList" outputName="getOrderListResponse" receivesAttachments="false" sendsAttachments="false"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://ogre.dev.o2.co.uk:8080/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
         <man:portalId>?</man:portalId>
         <man:customerNumber>?</man:customerNumber>
         <man:msisdn>?</man:msisdn>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>?</man:startOrderNumber>
            <man:numOrdersRequired>?</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:definitionCache rootPart="http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/manageorderservice_1_0.wsdl" type="TEXT"><con:part><con:url>http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/manageorderdata_1_0.xsd</con:url><con:content><![CDATA[<!--Date            Change#       Author            Change Description-->
<!--28/08/2009  	1.0.2         Shiby Varghese	Lead Review comments incorporated-->
<!--26/08/2009  	1.0.1         Shiby Varghese	Peer Review comments incorporated-->
<!--12/08/2009  	1.0.0         Shiby Varghese	Initial Version-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/manageorderdata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:mod="http://soa.o2.co.uk/manageorderdata_1" xmlns:pcp="http://soa.o2.co.uk/pscommonpostpaydata_1">
  <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="coredata_1_1.xsd"/>
  <xsd:import namespace="http://soa.o2.co.uk/pscommonpostpaydata_1" schemaLocation="pscommonpostpaydata_1_0.xsd"/>
  <xsd:element name="getOrderList" type="mod:getOrderList">
    <xsd:annotation>
      <xsd:documentation>This operation could return a list of orders for one of the following parameters,
				
				1. The user portal id on the O2 Registration Platform
				2. An internal unique user identifier on the O2 registration Platform
				3. Mobile Phone Number

				If a list of orders is associated with one of the above parameters, this operation should be able to paginate through the list.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderListResponse" type="mod:getOrderListResponse">
    <xsd:annotation>
      <xsd:documentation>This operation must retrieve a list of Orders, associated with an order identifier, provided one or more order(s) is associated with the given order identifier.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderListFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>SOA Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderDetails" type="mod:getOrderDetails">
    <xsd:annotation>
      <xsd:documentation>This operation should retrieve the details of an order for one of the following parameters,
				1.	The order number associated with an order
				2.	Mobile Phone Number</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderDetailsResponse" type="mod:getOrderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.  
				An additional CSA identifier needs to be provided in the input.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getOrderDetailsFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>SOA Fault</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="getOrderList">
    <xsd:annotation>
      <xsd:documentation>The search is performed either on user's portalid, orange customer number or msisdn. In order to paginate the start position of the page and the page size needs to be provided to this operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="portalId" type="xcore:portalIDType"/>
        <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber"/>
        <xsd:element name="msisdn" type="xcore:msisdnType"/>
      </xsd:choice>
      <xsd:element name="ordersSelectionCriteria" type="mod:ordersSelectionCriteriaType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="ordersSelectionCriteriaType">
    <xsd:annotation>
      <xsd:documentation>In order to paginate the start position of the page and the page size needs to be provided to this operation.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="startOrderNumber" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Start position of the first page of results.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="numOrdersRequired" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Number of orders required to be retrieved.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="getOrderListResponse">
    <xsd:annotation>
      <xsd:documentation>This operation must retrieve a list of orders if one or more orders are associated with the user portal id, orange customer number or msisdn (mobile phone number). The orders should be retrieved in a chronologically descending order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="totalOrders" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Total number of orders found for the search critera.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ordersReturned" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Number of orders returned.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="order" type="mod:orderSummaryType" minOccurs="1" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Order List</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="orderSummaryType">
    <xsd:annotation>
      <xsd:documentation>Order List</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
      <xsd:element name="orderId" type="xsd:integer"/>
      <xsd:element name="orderType" type="pcp:orderType"/>
      <xsd:element name="packageName" type="mod:packageName" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>This will be either the package name or the item name if the item was a  stand-alone item (ie not part of a package). e.g. Nokia 6210 Football Special, Siemens C35i base etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderDate" type="xsd:dateTime">
        <xsd:annotation>
          <xsd:documentation>Date on which the order was placed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
      <xsd:element name="returnsOutstanding" type="pcp:typeYesOrNo">
        <xsd:annotation>
          <xsd:documentation>Indicates whether there are any outstanding SKUs marked for return on this order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="partner" type="pcp:partnerType">
        <xsd:annotation>
          <xsd:documentation>Description of partner.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="packageName">
    <xsd:annotation>
      <xsd:documentation>Package is nothing but a saleable product. It will be a concatenation of all item (assigned product) names that this package (saleable product) consists of.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="500"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="getOrderDetails">
    <xsd:annotation>
      <xsd:documentation>This operation should retrieve the details of an order for an order identifier, provided an order is associated with the given order identifier.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="userId" type="pcp:csaIdType">
        <xsd:annotation>
          <xsd:documentation>It is the unique user id which is used to identify the initiator of the activity. For example customer service advisors will use their user Ids (csaId) to query the order details information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:choice>
        <xsd:element name="orderNumber" type="pcp:orderNumberType">
          <xsd:annotation>
            <xsd:documentation>Order number.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="msisdn" type="xcore:msisdnType">
          <xsd:annotation>
            <xsd:documentation>Mobile Phone Number. This (or orderNumber) is the key for the order that will be returned.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="getOrderDetailsResponse">
    <xsd:annotation>
      <xsd:documentation>Following are the optional details of an order returned, if an order is associated with the order number or msisdn (mobile phone number), which can be a post pay, prepay or DISE.
						
						1.	General information about the order including the total order amount, order status and the portal id of the user who placed the order.
						2.	Package(s) and items associated with packages.
						3.	Payment in advance details
						4.	Delivery address details
						5.	Information about the credit check activity done as part of placing the order     
						6.	Recurring payment details for paying for the order in instalments or periodic payments.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderHeaderDetails" type="mod:orderHeaderDetailsType"/>
      <xsd:element name="orderDetails" type="mod:orderDetailsType"/>
      <xsd:element name="oneOffPaymentDetails" type="mod:oneOffPaymentDetailsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is for the scenarios where Customer has paid for all or part of the order up front using a credit, debit card or assigned it to their post pay account. This will be populated in cases where handset or accessories have been purchased.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="deliveryDetails" type="mod:deliveryDetailsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is the delivery details for the order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creditCheckInfo" type="mod:creditCheckInfoType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The activity performed to check the credit capability of the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="recurringPaymentdetails" type="mod:recurringPaymentDetailsType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>This contains the details of the recurring payment for each Geneva account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="recurringPaymentDetailsType">
    <xsd:annotation>
      <xsd:documentation>This contains the details of the recurring payment for each Geneva account. There are four options for payment: bank, credit card, MTBilling and Geneva account.
				This will need to have a payment type defined and the geneva account number identifying the acount it refers to.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cardNumber" type="xcore:cardNumberType" minOccurs="0"/>
      <xsd:element name="cardDetails" type="mod:creditCardDetailsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Credit card details of the card used for the payment mandate of the account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
        <xsd:annotation>
          <xsd:documentation>Geneva account number that the order corresponds to.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="bankDetails" type="mod:bankAccountType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>User acc (as typed in by Care screens), Bank acc (as returned by BMC), sort code and name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="paymentMethod" type="pcp:paymentMethodType"/>
      <xsd:element name="bmcFailureReason" type="pcp:stringSize255" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Barron McCann failure string if card number or bank details fail CareX checks and they want to force the use of card no or bank details.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="billStyle" type="mod:billStyleDetailType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="billStyleDetailType">
    <xsd:annotation>
      <xsd:documentation>Bill style details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="isBillItemised" type="pcp:typeYesOrNo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Y/N if the bill is itemised.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="isPaperBill" type="pcp:typeYesOrNo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Y/N to Paper Bill Required.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="bankAccountType">
    <xsd:annotation>
      <xsd:documentation>Representation of bank details, including account holder name, sort code and account number.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="userAccountNumber" type="pcp:userAccountNumberType"/>
      <xsd:element name="bankAccountNumber" type="xcore:bankAccountNumberType" minOccurs="0"/>
      <xsd:element name="bankSortCode" type="xcore:bankSortCodeType"/>
      <xsd:element name="bankAccountHolder" type="xcore:bankAccountHolderNameType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="creditCheckInfoType">
    <xsd:annotation>
      <xsd:documentation>Representation of information required for credit check details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="previousAddress" type="mod:previousAddressType" minOccurs="0"/>
      <xsd:element name="legalEntityAddress" type="mod:legalEntityAddressType">
        <xsd:annotation>
          <xsd:documentation>Address of the legal entity placing the order.  For a business order, it will be the company and for a consumer, it will be the orderer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creditCheckDetails" type="mod:creditCheckDetailsType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="legalEntityAddressType">
    <xsd:annotation>
      <xsd:documentation>Address of the legal entity placing the order. For a business order it will be the company.  For a consumer it will be the orderer.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="legalEntityName" type="mod:legalEntityNameType">
        <xsd:annotation>
          <xsd:documentation>Maximum value of 327 (comprising of title + space + forename + space + surname = a maximum of 20 + 1 + 255 + 1 + 50 = 327 - for consumers). Non Consumer type customers would have their Company Name put in the field.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="basicAddress" type="mod:basicAddressType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="legalEntityNameType">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="327"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="previousAddressType">
    <xsd:annotation>
      <xsd:documentation>Previous address details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="addressStatus" type="xsd:integer" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Address status.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="basicAddress" type="mod:basicAddressType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="creditCheckDetailsType">
    <xsd:annotation>
      <xsd:documentation>Credit check details including the status of credit check, vet number, score and last credit check date.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="status" type="mod:creditCheckStatusType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>1 - UNCONDITIONALLY_ACCEPTED
						2 - CONDITIONALLY_ACCEPTED 3 - DEPOSIT 4 - REJECTED
						5 - REFERRED  6 - BROKEN  7 - NOT DONE	8 - DEPOSIT_100  
						9 - DEPOSIT_POR  10 - DEPOSIT_100_POR 11 - POR_ONLY</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vetNumber" type="mod:creditCheckVetNumberType" minOccurs="0"/>
      <xsd:element name="score" type="mod:creditCheckScoreType" minOccurs="0"/>
      <xsd:element name="lastCheckDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date the credit check was last performed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="creditClassId" type="pcp:creditClassIdType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The credit class to which this account belongs for the purpose of debt escalation [collections].It must be a valid identifier of a credit class that currently exists in the database. It must not be null.
						The values are:
						1=Consumer - High Risk
						2=Consumer - Medium Risk
						3=Consumer - Low Risk
						4=Consumer - High Risk
						5=Consumer - Medium Risk
						6=Consumer - Low Risk
						7=Consumer Cheque High Risk
						8=Consumer Cheque Low Risk
						9=Consumer DD or CCA
						10=SME Cheque High Risk
						11=SME Cheque Low Risk
						12=SME DD or CCA</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="creditCheckScoreType">
    <xsd:annotation>
      <xsd:documentation>Credit check Score.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
      <xsd:pattern value="\-?\d{1,5}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="creditCheckVetNumberType">
    <xsd:annotation>
      <xsd:documentation>Credit check Vet Number.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="11"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="creditCheckStatusType">
    <xsd:annotation>
      <xsd:documentation>1 - UNCONDITIONALLY_ACCEPTED
				2 - CONDITIONALLY_ACCEPTED 3 - DEPOSIT 4 - REJECTED
				5 - REFERRED  6 - BROKEN  7 - NOT DONE	8 - DEPOSIT_100  
				9 - DEPOSIT_POR  10 - DEPOSIT_100_POR 11 - POR_ONLY</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"></xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="deliveryDetailsType">
    <xsd:annotation>
      <xsd:documentation>Delivery details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="pcp:typeDescriptionSize80"/>
      <xsd:element name="basicAddress" type="mod:basicAddressType"/>
      <xsd:element name="companyName" type="mod:companyNameType" minOccurs="0"/>
      <xsd:element name="phone" type="pcp:telNumberType" minOccurs="0"/>
      <xsd:element name="fax" type="pcp:telNumberType" minOccurs="0"/>
      <xsd:element name="shippingMethod" type="pcp:typeDescriptionSize50" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="companyNameType">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="basicAddressType">
    <xsd:annotation>
      <xsd:documentation>Basic address details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="houseNameOrNumber" type="pcp:houseNameOrNumber" minOccurs="0"/>
      <xsd:element name="street" type="xsd:string" minOccurs="0"/>
      <xsd:element name="city" type="xsd:string" minOccurs="0"/>
      <xsd:element name="county" type="xsd:string" minOccurs="0"/>
      <xsd:element name="country" type="pcp:alpha2CountryCodeType"/>
      <xsd:element name="postCode" type="xcore:postcodeType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="oneOffPaymentDetailsType">
    <xsd:annotation>
      <xsd:documentation>This is the one-off payment for the order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="paymentMethod" type="pcp:paymentMethodType"/>
      <xsd:element name="cardNumber" type="xcore:cardNumberType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Mandatory when payment_method=CARD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cardDetails" type="mod:creditCardDetailsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Card details. Mandatory when payment_method=CARD.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="paymentSettledDate" type="xsd:date" minOccurs="0"/>
      <xsd:element name="billingAccountNumber" type="xcore:billingAccountNumberType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This element is present when the payment is made as one off against a Geneva Billing account rather than for a credit card. Mandatory when payment_method is GENEVA. Not present for other values.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="creditCardDetailsType">
    <xsd:annotation>
      <xsd:documentation>Credit card details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cardHolderName" type="xcore:cardHolderNameType">
        <xsd:annotation>
          <xsd:documentation>Name of the card holder</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="expiryDate" type="xcore:cardExpiryDateType">
        <xsd:annotation>
          <xsd:documentation>Expiry date of the card.  Zero or one. In format MM/YY</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="issueNumber" type="xcore:cardIssueNumberType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Issue number of the card.  Zero or one. 1 or 2 digits.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="cardType" type="mod:paymentCardType">
        <xsd:annotation>
          <xsd:documentation>Payment card types. CareX will hold the full textual description for this element locally.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="houseNameOrNum" type="pcp:houseNameOrNumber" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The house name or number that this card is registered to.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="postCode" type="xcore:postcodeType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The postcode that this card is registered to.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="paymentCardType">
    <xsd:annotation>
      <xsd:documentation>0,MAESTRO,CC 1,SOLO,CC 2,VISA,CC 3,MASTERCARD,CC
				4,DELTA,CC 5,AMEX,CC 6,RABOBANKBETALEN,CC
				7,EENMALIGEMACHTIGING,CC 8,CASHONDELIVERY,CC
				9,BANKOVERBOEKING,CC 10,VALUESTORE,CC
				11,MTBILLINGPORTAL,MT 12,MTBILLINGSHOP,MT 13,BANK,DD
				16,ELECTRON,CC 10001,MRINDIVIDUALPO,CC
				10002,MRSTANDINGPO,CC</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"></xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="orderDetailsType">
    <xsd:annotation>
      <xsd:documentation>Represents all the packages and items on the order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="package" type="mod:packageType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="VATReceiptRequired" type="pcp:typeYesOrNo"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="packageType">
    <xsd:annotation>
      <xsd:documentation>Represents one package (Saleable Product) in an order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderLineKey" type="pcp:orderLineKeyType">
        <xsd:annotation>
          <xsd:documentation>Represent order line id, consists of order id and order line number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="packageName" type="mod:packageNameType"/>
      <xsd:element name="mobileNumberPortingFlag" type="pcp:typeYesOrNo">
        <xsd:annotation>
          <xsd:documentation>Mobile Number Porting.  Only relevant if the Package contains a SIM.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="price" type="pcp:paymentMoneyType">
        <xsd:annotation>
          <xsd:documentation>The individual cost of the saleable product. This is the cost to the customer including VAT and any discounts.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="originalNonDiscountedPrice" type="pcp:paymentMoneyType">
        <xsd:annotation>
          <xsd:documentation>Original non-discounted price, per saleable product (INCLUDING VAT), Shop may have applied a discount, comparing this with the price will indicate if this is the case. Introduced as part of Retention.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="systemSuggestedDiscountPrice" type="pcp:paymentMoneyType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The price inclusive of VAT (in pence) of a saleable product that the system suggests is offered to the customer in order to retain their business. It is used in retention analysis to compare the price offered by the Customer Service Agent with that accepted by the Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vatAmount" type="pcp:vatAmountType">
        <xsd:annotation>
          <xsd:documentation>VAT rate and amount for this item</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vatReversalReceiptStatus" type="pcp:vatReversalReceiptStatusType">
        <xsd:annotation>
          <xsd:documentation>A status field which indicates whether the Saleable Product has been returned by the customer, and hence any necessary refunds and VAT adjustments have been made, such that a VAT Reversal receipt could be produced. Takes values  'R' - Ready for receipt production 'P' - Reversal receipt produced 'N' - Not Applicable (Default) 'X' -  Receipt not required.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="item" type="mod:itemType" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Represents an item within this package.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="vatExclusivePrice" type="pcp:paymentMoneyType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="itemType">
    <xsd:annotation>
      <xsd:documentation>Representation of an item (Assigned Product) in a package (Saleable Product) within in order</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderLineKey" type="pcp:orderLineKeyType"/>
      <xsd:element name="assignNumber" type="pcp:assignNumberType"/>
      <xsd:element name="itemId" type="pcp:itemIdType">
        <xsd:annotation>
          <xsd:documentation>This value is from the productid of the assigned product relation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="itemName" type="pcp:stringSize255">
        <xsd:annotation>
          <xsd:documentation>The item name.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="change" type="pcp:changeType"/>
      <xsd:element name="imei" type="xcore:imeiType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Only applicable to handset item.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Only applicable to SIM cards.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="shortCode" type="pcp:shortCodeType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This element represents shortcode for ESME orders of category SAD or PTM where it represents the shortcode.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ssn" type="pcp:ssnType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Only applicable to SIM cards. This will be appended to the itemName (of destProduct/destProductName) for displaying.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="category" type="pcp:itemCategoryType">
        <xsd:annotation>
          <xsd:documentation>Category of the item.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="groupId" type="xsd:integer" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Allows multiple products to be associated together (e.g. a handset, sim and tariff).  It has to be unique at an order level and across saleable products. It may be null for a charger for example.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="handsetRisk" type="pcp:riskType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Handset Risk is mandatory for non-RFE orders</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="handsetMake" type="pcp:typeHandsetMake" minOccurs="0"/>
      <xsd:element name="handsetModel" type="pcp:typeHandsetModel" minOccurs="0"/>
      <xsd:element name="handsetReplacementGrade" type="pcp:handsetReplacementGradeType" minOccurs="0"/>
      <xsd:element name="warrantyOwner" type="mod:warrantyOwnerType" minOccurs="0"/>
      <xsd:element name="warrantyEndDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The end date of the warranty.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="status" type="xsd:integer" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The status that the orderline is currently in</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="mobileNumberPortingFlag" type="pcp:typeYesOrNo">
        <xsd:annotation>
          <xsd:documentation>Mobile Number Porting.Only relevant if the item is a SIM.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="destProduct" type="mod:destProductType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A physical item will have a dest_product (SKU), but a logical item will not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="logicalProduct" type="mod:logicalProductType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The instance of a Logical product (LP) assigned to an individual Service Connection. Usually an alert service, Eg football scores; but also includes Insurance. The physical incarnation of this entity is primarily in the configuration information in the network required to deliver the service.
					If the Shop/Sales Channel has provisioned or attempted to provision the LP then the serviceFailureReason must be set. If this element is not set then it will be assumed that the LP has not been provisioned.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="l2MConnection" type="mod:l2MConnectionDetailsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Land to mobile connection details. Only relevant if order is ESME order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="PTMshortcode" type="mod:PTMshortcodeType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>PTM shortcode details. Only relevant if order is an ESME order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="insuranceProduct" type="mod:insuranceProductType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>An insurance product - this may be part of a bundle, ie the saleable product has assigned products other than just this assigned insurance product. In that case, imei, msisdn and start date are optional, otherwise mandatory if this is the only assigned product for a saleable product
						If a product has been offered for free or discounted then the override amount, period and period type must be populated.</xsd:documentation>
          <xsd:documentation>An insurance product</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="chargeableDeliveryOptions" type="mod:deliveryOptionsType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Chargeable delivery option, for the order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="deliveryOptionsType">
    <xsd:annotation>
      <xsd:documentation>Delivery option details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="deliveryDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Valid delivery date for the requested by the customer</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="despatchDate" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date the order will need to be sent to the logistics warehouse to achieve the requested delivery date</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="timeslot" type="pcp:timeSlotType">
        <xsd:annotation>
          <xsd:documentation>Delivery option code that is valid on this delivery date.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="insuranceProductType">
    <xsd:annotation>
      <xsd:documentation>An insurance product - this may be part of a bundle, ie the saleable product has assigned products other than just this assigned insurance product. 
				In that case, imei, msisdn and start date are optional, otherwise mandatory if this is the only assigned product for a saleable product
				If a product has been offered for free or discounted then the override amount, period and period type must be populated.</xsd:documentation>
      <xsd:documentation>An insurance product</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="imei" type="xcore:imeiType" minOccurs="0"/>
      <xsd:element name="msisdn" type="xcore:msisdnType" minOccurs="0"/>
      <xsd:element name="assignedProductStartDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date time that an assigned product should take effect or is initialised. For example the date time that insurance begins</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="assignedProductEndDate" type="xsd:dateTime" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date time that an assigned product ceases or is cancelled. For example the date time that insurance ends</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="overridePrice" type="mod:overridePriceType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If a product is discounted or free then this element will be populated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="assignedProductBillingFreq" type="pcp:assignedProductBillingFreq"/>
      <xsd:element name="isCrossCharged" type="pcp:typeYesOrNo">
        <xsd:annotation>
          <xsd:documentation>A Y/N flag indicating whether or not the assigned product is cross charged to the master postpay billing account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="PTMshortcodeType">
    <xsd:annotation>
      <xsd:documentation>PTM shortcode details. Only relevant if order is an ESME order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="secondaryProductId" type="pcp:itemIdType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Product id of any additional product for the shortcode - in this case the product that maps to the shortcode price point tariff.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="secondaryProductName" type="pcp:stringSize255" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Product name of any additional product for the shortcode - in this case the product that maps to the shortcode price point tariff.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="shortcodeCategoryId" type="pcp:typeDescriptionSize80">
        <xsd:annotation>
          <xsd:documentation>The current shortcode categories and their corrosponding short codes are Adult = 'AO',
							Adult e-money = 'AE', Chat = 'CO', Chat e-money = 'CE', Other = 'OO' and Other e-money = 'OE'. This element is not enumerated to allow the easy addition of new categories.
							The category is used by EAI to determine the billing description passed to Geneva.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="sourceAddressInfo" type="mod:sourceAddressInfoType" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="sourceAddressInfoType">
    <xsd:annotation>
      <xsd:documentation>For ESME : Holds information on the definition of the source address and the content to be supplied.  Each brief may be allocated to multiple source addresses.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="advertisedName" type="pcp:typeDescriptionSize80">
        <xsd:annotation>
          <xsd:documentation>The advertised name of the service provided by this source address</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="websiteAddress" type="pcp:stringSize255" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The address of the website on which this source address is advertised.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="serviceDescription" type="pcp:stringSize255"/>
      <xsd:element name="contentType" type="mod:contentType"/>
      <xsd:element name="ICSTISApproved" type="pcp:typeYesOrNo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Whether the service is approved by ICSTIS if the content is chat or dating. A Y/N flag identifying whether approved.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="howToSubscribe" type="pcp:stringSize255">
        <xsd:annotation>
          <xsd:documentation>A textual description on how a customer subscribes to the source address content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="howToUnsubscribe" type="pcp:stringSize255">
        <xsd:annotation>
          <xsd:documentation>A textual description on how a customer un-subscribes to the source address content.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="customerCarePhone" type="pcp:typeDescriptionSize20">
        <xsd:annotation>
          <xsd:documentation>The phone number of the customer care agent responsible for the source address content</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="subContractorName" type="pcp:stringSize255" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The name of the company if the source address is subcontracted out.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="contentType">
    <xsd:annotation>
      <xsd:documentation>A code identifying the type of content provided by this source address, for example ringtones, logs, games, chat.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="packageNameType">
    <xsd:annotation>
      <xsd:documentation>Saleable product name.It will be a concatenation of all assigned product names that this saleable product consists of.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="500"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="l2MConnectionDetailsType">
    <xsd:annotation>
      <xsd:documentation>Land to mobile connection details. Only relevant if order is ESME order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="connection" type="mod:connectionType" maxOccurs="unbounded"/>
      <xsd:element name="sourceIPAddressList" type="mod:sourceIPAddressListType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="deliveryReportReqd" type="pcp:typeYesOrNo" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Whether delivery reports are required on the connection.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="sourceIPAddressListType">
    <xsd:annotation>
      <xsd:documentation>The list of additional source IP addresses used by the ESME for land to mobile connectivity.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="IPAddress" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The IP Address used to connect to the internet in format nnn.nnn.nnn.nnn</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="IPAddressOwner" type="pcp:typeDescriptionSize20">
        <xsd:annotation>
          <xsd:documentation>The owner of the public IP Address.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ISPRelationship" type="pcp:typeDescriptionSize20" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The relationship of the IP Address owner to the ESME.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="connectionType">
    <xsd:annotation>
      <xsd:documentation>The details of an ESME's connection</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="connectionMethod" type="mod:connectionMethodType"/>
      <xsd:element name="IPAddress" type="xsd:string"/>
      <xsd:element name="IPAddressOwner" type="pcp:typeDescriptionSize20"/>
      <xsd:element name="connectionName" type="pcp:typeDescriptionSize20" minOccurs="0"/>
      <xsd:element name="ISPRelationship" type="pcp:typeDescriptionSize20" minOccurs="0"/>
      <xsd:element name="ISPRelationshipDescr" type="xsd:string" minOccurs="0"/>
      <xsd:element name="kilostreamLink60Info" type="mod:kilostreamLink60InfoType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="kilostreamLink60InfoType">
    <xsd:annotation>
      <xsd:documentation>The kilostream or link 60 circuit information. This is required when adding a kilostream or link 60 circuit.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="existingLink" type="pcp:typeYesOrNo">
        <xsd:annotation>
          <xsd:documentation>Whether an existing kilostream link is to be used.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="O2ConnectionSite" type="mod:O2ConnectionSiteType"/>
      <xsd:element name="readyForServiceDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date that the circuit is required for service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="circuitNumber" type="pcp:typeDescriptionSize50">
        <xsd:annotation>
          <xsd:documentation>The kilostream circuit number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="siteAddress" type="pcp:stringSize255">
        <xsd:annotation>
          <xsd:documentation>The address of the customer site (A end of the circuit) in a 'free-text' format.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="aggregateBearerRef" type="pcp:typeDescriptionSize50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The aggregate bearer reference. Only required for Keybridge O2 connection site.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="aggregateLinkTimeslot" type="mod:aggregateLinkTimeslotType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="aggregateLinkTimeslotType">
    <xsd:annotation>
      <xsd:documentation>The timeslot in the aggregate link. Only required for Keybridge O2 connection site.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="1"/>
      <xsd:maxInclusive value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="O2ConnectionSiteType">
    <xsd:annotation>
      <xsd:documentation>Which O2 site the circuit is connected to. Current options are:
				Buckingham Avenue, Slough,Brunel Way, Slough,Elland, Halifax,Croydon, Surrey,
				Keybridge London.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="connectionMethodType">
    <xsd:annotation>
      <xsd:documentation>The connection method chosen by the ESME. The following values it can take,
				Internet
				Kilostream
				Link 60
				ISDN</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="logicalProductType">
    <xsd:annotation>
      <xsd:documentation>The instance of a Logical product (LP) assigned to an individual Service Connection. Usually an alert service Eg football scores; but also includes Insurance. The physical incarnation of this entity is primarily in the configuration information in the network required to deliver the service.
				If the Shop/Sales Channel has provisioned or attempted to provision the LP then the serviceFailureReason must be set. If this element is not set then it will be assumed that the LP has not been provisioned.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="commonRegistryUserName" type="pcp:typeHorizonId"/>
      <xsd:element name="commonRegistryUserDomain" type="pcp:typeHorizonDomain"/>
      <xsd:element name="periodic" type="mod:periodicType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Must be populated if the Logical Product is PERIODIC. Note that a Logical Product may aslo be QUOTAed.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="quotaed" type="mod:quotaedType" minOccurs="0"/>
      <xsd:element name="overridePrice" type="mod:overridePriceType" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="overridePriceType">
    <xsd:annotation>
      <xsd:documentation>If a product is discounted or free then this element should be populated with the details of the discount.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="assignedProductOverrideAmount" type="pcp:paymentMoneyType">
        <xsd:annotation>
          <xsd:documentation>The monetary value, in the lowest denomination, e.g. pence or cents, that the assigned product should be overriden with. This amount is used to apply, for example, discount or free pricing for a fixed period of time.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="assignedProductOverridePeriod" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The period of time that an override price should be applied to an assigned product, measured in months.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="quotaedType">
    <xsd:annotation>
      <xsd:documentation>Must be populated if the Logical Product is QUOTA. Note that a Logical Product may also be PERIODIC. 
				When extending an entitlement for a service which is NONPERIODIC_QUOTA, the maximumCount value is added to the user's credit balance for that
				application. It is not possible to alter a user's maximumCount for an existing
				periodic service - i.e. if a service is periodic (either unlimited or
				quota'd), the only modifications that can be made are to add additional periods.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="maximumCount" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The maximum number of usage events of this service allowed within a period. When CREATING services which are PERIODIC QUOTA, it denotes the maximum no. of uses per period. When creating an entitlement for a service which is NONPERIODIC QUOTA, it denotes the total no. of allowed uses.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="periodicType">
    <xsd:annotation>
      <xsd:documentation>Must be populated if the Logical Product is PERIODIC. Note that a Logical Product may also be QUOTAed.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="periodRemaining" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The number of periods remaining for an assigned product. Currently only applied to Logical Products . Range 1 - 99999.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="periodType" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The units that periodRemaining is measured in. valid values are 1 = week, 2 = month, 3 = year.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="destProductType">
    <xsd:annotation>
      <xsd:documentation>Destination product details - 'Hardware' tab on ORD05 and 'Returns' tab on ORD03.  Also known as SKUs.  Each physical item has a SKU.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="sku" type="pcp:skuType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>e.g. 044-01-01-002-0005-0001-0001-003.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="destProductName" type="pcp:stringSize255" minOccurs="0"/>
      <xsd:element name="returnReason" type="pcp:returnReasonCodeType"/>
      <xsd:element name="returnCondition" type="mod:returnConditionType"/>
      <xsd:element name="returnTimestamp" type="xsd:dateTime" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="returnConditionType">
    <xsd:annotation>
      <xsd:documentation>0 Not returned
				1 Damaged 
				2 Faulty 
				3 Incomplete
				4 Missing 
				5 Good 
				6 Used</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="warrantyOwnerType">
    <xsd:annotation>
      <xsd:documentation>A physical product will be covered by either the Manufacturer's Original Warranty or, in the case of an insurance replacement, by the Insurance Fulfilment Agent. Allowed values are MAN for manufacturer or DEX for Insurance Fulfilment Agent. 
			Mandatory when adding an Insurance product, Not present when Removing (canceling a policy).
			
			Allowed values are:
			
			MAN - Manufacturer's Original Warranty
			DEX - insurance replacement, by the Insurance Fulfilment Agent</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MAN"/>
      <xsd:enumeration value="DEX"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="orderHeaderDetailsType">
    <xsd:annotation>
      <xsd:documentation>Generic information about an order.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderNumber" type="pcp:orderNumberType"/>
      <xsd:element name="orderDate" type="xsd:date"/>
      <xsd:element name="orderType" type="pcp:orderType">
        <xsd:annotation>
          <xsd:documentation>The following are the different order types,
						NE - New
						RE - Replacement
						UG - Upgrade
						ES - ESME
						EC - ESME Change Request</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="partner" type="pcp:partnerType"/>
      <xsd:element name="sourceOfSale" type="pcp:typeSourceOfSale"/>
      <xsd:element name="posBusinessUnit" type="pcp:typePosBusinessUnit" minOccurs="0"/>
      <xsd:element name="salesPerson" type="pcp:typeSalesPerson" minOccurs="0"/>
      <xsd:element name="salesManager" type="pcp:typeSalesPerson" minOccurs="0"/>
      <xsd:element name="orderStatus" type="pcp:orderStatusType"/>
      <xsd:element name="portalId" type="xcore:portalIDType"/>
      <xsd:element name="o2UserId" type="pcp:typeHorizonId" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>O2 User Id.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userAlias" type="xsd:string" minOccurs="0"/>
      <xsd:element name="customerNumber" type="pcp:typeHorizonCustomerNumber" minOccurs="0"/>
      <xsd:element name="customerTier" type="xcore:customerTierType"/>
      <xsd:element name="proofOfId" type="pcp:proofOfIdType" minOccurs="0"/>
      <xsd:element name="proofOfResidence" type="pcp:proofOfResidenceType" minOccurs="0"/>
      <xsd:element name="orderTotalAmount" type="pcp:paymentMoneyType">
        <xsd:annotation>
          <xsd:documentation>Monetary value of the order in pence.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="returnReasonHeader" type="mod:returnReasonHeaderType">
        <xsd:annotation>
          <xsd:documentation>Order header level information about the returns.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="linkedOrderNum" type="pcp:orderNumberType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Order number of a linked order.  E.g.the upgrade order associated with this order, or vice versa.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="workflowIndicator" type="mod:workflowIndicatorType">
        <xsd:annotation>
          <xsd:documentation>Indicates where the order has come from and therefore which workflow is being followed UK or Netherlands.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="actualDeliveryDetails" type="mod:actualDeliveryDetailsType" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="callReference" type="xsd:integer" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Used for commisions. tie upsell items to this order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="callTypeIndicator" type="mod:callTypeIndicator" minOccurs="0"/>
      <xsd:element name="vatTotal" type="pcp:paymentMoneyType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="callTypeIndicator">
    <xsd:annotation>
      <xsd:documentation>It takes the following values,
         	OUTBOUND	=	pro-active or
			INBOUND		=	reactive order 
			This is used for commisions/retention.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INBOUND"/>
      <xsd:enumeration value="OUTBOUND"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="actualDeliveryDetailsType">
    <xsd:annotation>
      <xsd:documentation>Actual delivery details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="consignmentNumber" type="pcp:typeDescriptionSize50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contains the courier's parcel shipping reference number for this order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="courierDeliveryOrder" type="pcp:typeDescriptionSize50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Name of the carrier transporting the goods to the customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="courierServiceType" type="pcp:typeDescriptionSize50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Courier service level that was used to dispatch the parcel.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="despatchDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Date that the despatch note for this order was generated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="shippedFrom" type="pcp:typeDescriptionSize50" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The organisation that fulfilled the order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="returnReasonHeaderType">
    <xsd:annotation>
      <xsd:documentation>Represents all return information (order header level).Return Reason drop down value, and return reason free text.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="returnCode" type="pcp:returnReasonCodeType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contains code for reason for return at order level.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="returnNotes" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Free text field containing reason for return (order level).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="workflowIndicatorType">
    <xsd:annotation>
      <xsd:documentation>workflow where UK for United Kingdom order and NL for
				Netherlands order with the exention of one of the
				following; - NE - New, RE - Replacement, DC -
				Datacentric, ES - ESME, EC - ESME Change UG - Upgrade,
				IF - Inkfish, TS - Telesales, RT - Retail.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/pscommonpostpaydata_1_0.xsd</con:url><con:content><![CDATA[<!--Date            Change#       Author            	 Change Description-->
<!--28/08/2009		1.0.9		  Shiby Varghese		Added typeHorizonId, typeHorizonDomain, typeDescriptionSize50, vatAmountType, vatReversalReceiptStatusType, 
														residenceType, lineNumberType, skuType, typeDescriptionSize20, typeDescriptionSize80, typeCreditCardNumber, 
														typeCardIssueNumber, horizonHouseNumberType, creditClassIdType, paymentMethodType, 
														orderStatusType, proofOfIdType, proofOfResidenceType, orderLineKeyType, orderIdType, assignNumberType   
														Removed creditCheckDetailsType, creditCheckValuesType and hardwareIdentifierType-->
<!--18/08/2009   	1.0.8         Karthikeyan R D   	Added types for currency, userAccountNumber, telephoneContact, addressFormat,-->
<!--position, department, extensionNumber, initials, firstName, lastName-->
<!--12/08/2009   	1.0.7         Venkata Karthik   	Removed pattern in vatRateType-->
<!--10/08/2009   	1.0.6         Venkata Karthik   	ProductFamily element added in productType-->
<!--15/07/2009      1.0.5		  Arjun B				Added lastPaymentOrigin,lastPaymentStatus,lastPaymentMethod simple types as part of ViewLastBillDetails business service-->
<!--15/07/2009      1.0.4		  Venkata Karthik		Partner field now takes partner values and not 3 character partnerCode and restricted partner field to 1 to 20 characters.-->
<!--06/07/2009   	1.0.3         Venkata Karthik   	Updated schema as per CUK ICDv 1.3-->
<!--25/06/2009  	1.0.2         Venkata Karthik 		Added accountSetReferenceType,chargeToCrossChargeAccountReferenceType,makeType and modelType-->
<!--12/06/2009  	1.0.1         Raghu.Ugare       	Incorporating initial round of Review comments-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/pscommonpostpaydata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1" xmlns:cpd="http://soa.o2.co.uk/pscommonpostpaydata_1">
  <xsd:import namespace="http://soa.o2.co.uk/coredata_1" schemaLocation="coredata_1_1.xsd"/>
  <xsd:complexType name="productType">
    <xsd:annotation>
      <xsd:documentation>Product structure.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="ProductId" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>System identifier for the product. Not
						customer-friendly - to be used in subsequent
						update calls.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductEquivalenceId" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>The master product equivalence Id to identify
						different versions of the same product across
						the product catalogues for different channels.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TariffName" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The billing Tariff name. This is will be
						populated only while retrieving the current
						contract along with Tariff. Don't use this field
						as this will be deprecated.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Customer friendly marketing name for the
						product. Should be consistent with the sales
						channels and the bill.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductFamily" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The customer tariff family. e.g. SIMO, 1M, 12M, 18M, 24M, 
				IPHONE, 24M IPHONE. This is applicable only to Tariffs.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="MonthlyFee" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Monthly recurring fee in UK pence.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Description of the product.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductClassification" type="cpd:productClassification">
        <xsd:annotation>
          <xsd:documentation>Sales category for this product.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ExclusiveGroup" type="xsd:string" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Identifies the group of products to which this
						product belongs. Only one product in the group
						can be active on a service contract at any one
						time.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductDefault" type="xsd:boolean" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates whether this product is the default
						within the chosen tariff.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductRequestDateAlignment" type="cpd:productRequestDateAlignmentType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Indicates whether the Tariff, or addition or
						removal of a bolt-on or other service, must be
						(or may be) requested to take place on a future
						date.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductTypeEquivalenceId" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The product type equivalence Id to identify
						chargeable and non chargeable versions of the
						same product across the product categories for a
						specific channel.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="StartDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The date on which the product becomes effective.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ExpiryDate" type="xsd:date" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For promotional products, the date on which the
						product expires.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductStatus" type="cpd:productStatus" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The product status.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ExtendedProductStatus" type="cpd:extendedProductStatus" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The extended product status.Will be populated
						only for pending products.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Requester" type="cpd:requester" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>The requester of the service request.This will
						be populated only for the SRs which is pending
						or inprogress ones.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="CutoverProduct" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>For promotional products, the product that will
						be added to the service contract once the expiry
						date is reached.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductParameters" type="cpd:productParamType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>Additional information required by the product</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="InclusiveProducts" type="cpd:productType" minOccurs="0" maxOccurs="unbounded">
        <xsd:annotation>
          <xsd:documentation>List of products which are explicitly provided
						by the service contract, typically for no
						additional charge. Currently inclusive bolt-ons
						(for some high value tariffs) and data bolt-ons.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="businessPolicy">
    <xsd:annotation>
      <xsd:documentation>Business policy details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Subject" type="cpd:subject">
        <xsd:annotation>
          <xsd:documentation>The entity that has permission to carry out the
						operation.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Action" type="cpd:action">
        <xsd:annotation>
          <xsd:documentation>The operation the permission covers. ADD – The
						subject is allowed to add the object to the
						contract. REMOVE – The subject is allowed to
						remove the object from the contract. SWAP – The
						subject is allowed to swap the object for
						another of the same type.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ProductId" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Product Id of the product the operation can act
						on.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Channel" type="cpd:channel">
        <xsd:annotation>
          <xsd:documentation>The channel over which the operation is
						permitted.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Permitted" type="xsd:boolean">
        <xsd:annotation>
          <xsd:documentation>Whether the operation is permitted or not.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReasonCode" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If permission is denied, the business rule
						reason code that is preventing the operation.
						This will be referred by the Consumer to display
						the appropriate message to the Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="ReasonMessage" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>If permission is denied, the message used for
						internal (e.g. Ops, Customer Service) purposes
						and may be for the Customer.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="subject">
    <xsd:annotation>
      <xsd:documentation>A type that only allows CUSTOMER, STD AGENT, RET AGENT
				as valid values.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CUSTOMER"/>
      <xsd:enumeration value="STD AGENT"/>
      <xsd:enumeration value="RET AGENT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="action">
    <xsd:annotation>
      <xsd:documentation>Action - ADD,REMOVE,SWAP or CANCEL.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ADD"/>
      <xsd:enumeration value="REMOVE"/>
      <xsd:enumeration value="SWAP"/>
      <xsd:enumeration value="CANCEL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="productClassification">
    <xsd:annotation>
      <xsd:documentation>Product classification valid values.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="None"/>
      <xsd:enumeration value="Tariff"/>
      <xsd:enumeration value="Bar"/>
      <xsd:enumeration value="Billing Option"/>
      <xsd:enumeration value="Broadband"/>
      <xsd:enumeration value="Data Bundle"/>
      <xsd:enumeration value="Data Option"/>
      <xsd:enumeration value="Data Roaming"/>
      <xsd:enumeration value="ESME"/>
      <xsd:enumeration value="ESME Short code"/>
      <xsd:enumeration value="Insurance"/>
      <xsd:enumeration value="International from UK"/>
      <xsd:enumeration value="International Roaming"/>
      <xsd:enumeration value="Messaging Bundle"/>
      <xsd:enumeration value="Mixed Bundle"/>
      <xsd:enumeration value="Promotional"/>
      <xsd:enumeration value="Subscription Discount"/>
      <xsd:enumeration value="Supplementary Service"/>
      <xsd:enumeration value="Text Service"/>
      <xsd:enumeration value="Treat"/>
      <xsd:enumeration value="Voice Bundle"/>
      <xsd:enumeration value="WiFi"/>
      <xsd:enumeration value="Family Subscription"/>
      <xsd:enumeration value="Family Discount"/>
      <xsd:enumeration value="Customer Service Charge"/>
      <xsd:enumeration value="Support"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="channel">
    <xsd:annotation>
      <xsd:documentation>Channel valid values.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DASHBOARD"/>
      <xsd:enumeration value="FAMILY"/>
      <xsd:enumeration value="EADC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="productStatus">
    <xsd:annotation>
      <xsd:documentation>Product Status: Active = 0; PendingAdd = 1;
				PendingRemove = 2, PendingModify = 3</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="2"/>
      <xsd:enumeration value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="productParamType">
    <xsd:annotation>
      <xsd:documentation>Product parameter type.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="paramName" type="cpd:paramNameType">
        <xsd:annotation>
          <xsd:documentation>Type of product parameter, ex:CALLINGCIRCLE</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="paramValue">
        <xsd:annotation>
          <xsd:documentation>Product parameter value, e.g. 447709123456</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="20"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="paramNameType">
    <xsd:annotation>
      <xsd:documentation>ParamNameType valid values - CALLINGCIRCLE.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CALLINGCIRCLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="productRequestDateAlignmentType">
    <xsd:annotation>
      <xsd:documentation>Indicates whether the Tariff, or addition or removal of
				a bolt-on or other service, must be (or may be)
				requested to take place on a future date. Valid values
				are: NONE: Must be aligned to current date and future
				dating not allowed BILLDATE: must be aligned to billing
				date BILLDATE-1: must be aligned to the day before the
				billing date ANY: may be future dated to any date</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="addressType">
    <xsd:annotation>
      <xsd:documentation>address details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="organisation" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="subBuildingName" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="buildingName" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="buildingNumber" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="dependentStreet" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="street" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="dependentLocality" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="locality" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="postTown" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="county" type="cpd:stringSize255" minOccurs="0"/>
      <xsd:element name="postcode" type="cpd:postcode" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="stringSize255">
    <xsd:annotation>
      <xsd:documentation>Generic type that can be used for an string field, max
				length 255.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="postcode">
    <xsd:annotation>
      <xsd:documentation>Post code</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="25"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="extendedProductStatus">
    <xsd:annotation>
      <xsd:documentation>The extended product status valid values.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NEW"/>
      <xsd:enumeration value="ACCEPTED"/>
      <xsd:enumeration value="DELAYED"/>
      <xsd:enumeration value="EXECUTION"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="requester">
    <xsd:annotation>
      <xsd:documentation>The requester of the service request. Notice that new
				vlaues will be added when the client are added. Valid
				values: C – Carex B – EBPP payments E – Geneva
				Treatments processor H – Chorelys Q – EQCU O – O2 text S
				– Bulk service request W – Shops (new connections ,
				upgrades and replacements) R – Retail shops direct I –
				Client (iPhone) X – Product Expiration and
				Transformation D – Consumer Dashboard via SOA</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--Adding new types here-->
  <xsd:simpleType name="orderType">
    <xsd:annotation>
      <xsd:documentation>NE - New, RE - Replacement, UG - Upgrade , ES - ESME, EC
				- ESME Change Request</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
      <xsd:minLength value="2"/>
      <xsd:enumeration value="NE"/>
      <xsd:enumeration value="RE"/>
      <xsd:enumeration value="UG"/>
      <xsd:enumeration value="ES"/>
      <xsd:enumeration value="EC"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeHorizonCustomerNumber">
    <xsd:annotation>
      <xsd:documentation>The unique internal identifier for the customer that is
				legally responsible for this account. May be either an
				individual or a company (should exist in
				CUST_MAP.CUSTNUM). One of the extenal ids that this
				internal identifier maps to is "Horizon Customer Number"
				mastered in com Registration. Refers to
				LEGAL_ENT_CUSTNUM in ORDER_ACCOUNT table.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="18"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="channelType">
    <xsd:annotation>
      <xsd:documentation>ORDER METHOD
				TS - Telesales, 
				RT - Retail, 
				OL - Online, 
				IA - Insurance Administrator. 
				Defaults to OL</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="2"/>
      <xsd:minLength value="2"/>
      <xsd:enumeration value="TS"/>
      <xsd:enumeration value="RT"/>
      <xsd:enumeration value="OL"/>
      <xsd:enumeration value="IA"/>
      <xsd:enumeration value="IT"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeOwningBusinessDivision">
    <xsd:annotation>
      <xsd:documentation>O2 Business that owns the order.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="O2UK"/>
      <xsd:enumeration value="O2ONLINE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeSourceOfSale">
    <xsd:annotation>
      <xsd:documentation>The sales channel that sold this order.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="9"/>
      <xsd:enumeration value="online"/>
      <xsd:enumeration value="RFE"/>
      <xsd:enumeration value="DISE"/>
      <xsd:enumeration value="ESME"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typePosBusinessUnit">
    <xsd:annotation>
      <xsd:documentation>Point of Sale business unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeSalesPerson">
    <xsd:annotation>
      <xsd:documentation>The Sales Person</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="productNameType">
    <xsd:annotation>
      <xsd:documentation>The assigned product name</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="skuNameType">
    <xsd:annotation>
      <xsd:documentation>The name of the Stock Keeping Unit (SKU)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="serialNumberType">
    <xsd:annotation>
      <xsd:documentation>Serial number of item.Type of serial number is indicated
				in serial number type field but will contain the IMEI
				for handset order lines and SSNs for SIM card order
				lines. The serial numbe will be left justified and
				padded with spaces.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeHandsetMake">
    <xsd:annotation>
      <xsd:documentation>Different handset makes: NOKIA, ERICSSON etc..</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeHandsetModel">
    <xsd:annotation>
      <xsd:documentation>Handset models</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="commentsType">
    <xsd:annotation>
      <xsd:documentation>Used for free-text comment fields</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="32700"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="replacementMethodType">
    <xsd:annotation>
      <xsd:documentation>Indicates whether the a replacement order is an active
				replacement. An active replacement involves the delivery
				agency going to the customer and exchanging the product.
				If a replacement is not active then the customer returns
				the product by post.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACTIVE"/>
      <xsd:enumeration value="POST"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="houseNameOrNumber">
    <xsd:annotation>
      <xsd:documentation>The house name or number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="postalStreet">
    <xsd:annotation>
      <xsd:documentation>The street name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="itemIdType">
    <xsd:annotation>
      <xsd:documentation>Representaion of an item id. From item_id on order line
				table.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="80"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="inclusiveAllowancesType">
    <xsd:annotation>
      <xsd:documentation>The amount of product that is available at the start of
				this billing period.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="productDescription" type="cpd:productDescription">
        <xsd:annotation>
          <xsd:documentation>The description of the the product.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inclusiveProductType" type="cpd:inclusiveProductType">
        <xsd:annotation>
          <xsd:documentation>Used to differentiate between types of inclusive
						products, such as seconds, messages and kbs.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inclusiveAllowanceInitialTotal" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The total for the amount of this product that
						was available at the start of this billing
						period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inclusiveAllowanceUsedTotal" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The total for the amount of this product that
						has been used during this billing period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="inclusiveAllowanceRemainingTotal" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>The total for the amount of this product that it
						remaining for this billing period.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="productDescription">
    <xsd:annotation>
      <xsd:documentation>The description of the the product such as both way bar,
				daily 50 text messages etc</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="inclusiveProductType">
    <xsd:annotation>
      <xsd:documentation>Used to differentiate between types of inclusive
				products, such as seconds, messages and kbs</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SECONDS"/>
      <xsd:enumeration value="MESSAGES"/>
      <xsd:enumeration value="KBS"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="segmentation">
    <xsd:annotation>
      <xsd:documentation>The marketing segment that the customer belongs to based
				on their spend. Possible values are Platinum, Gold,
				Silver, Bronze, Select, Sel_Inv, Sel_Few, none and
				Unknown. Maps to CUST_SEGMENT constraint on ORDER_PARTY
				table.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Platinum"/>
      <xsd:enumeration value="Gold"/>
      <xsd:enumeration value="Silver"/>
      <xsd:enumeration value="Bronze"/>
      <xsd:enumeration value="Select"/>
      <xsd:enumeration value="Sel_Inv"/>
      <xsd:enumeration value="Sel_Few"/>
      <xsd:enumeration value="Unknown"/>
      <xsd:enumeration value="none"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeYesOrNo">
    <xsd:annotation>
      <xsd:documentation>Flag indicating whether or not there are outstanding
				returns on an order (Y/N). Field will be N if no returns
				have been requested.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1"/>
      <xsd:enumeration value="Y"/>
      <xsd:enumeration value="N"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ssnType">
    <xsd:annotation>
      <xsd:documentation>SIM serial number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
      <xsd:pattern value="\d{11}|\d{19}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="orderNumberType">
    <xsd:annotation>
      <xsd:documentation>The Order Number.Representation of an order number, in
				the form ab-12345678 or ab-123456789.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="handsetReplacementGradeType">
    <xsd:annotation>
      <xsd:documentation>NEW, GRADEA, REFURB.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NEW"/>
      <xsd:enumeration value="GRADEA"/>
      <xsd:enumeration value="REFURB"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="csaIdType">
    <xsd:annotation>
      <xsd:documentation>Unique identifier for the CSA - Webseal username. Used
				to identify the initiator of an activity, usually a CSAs
				Id</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
      <xsd:minLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="orderFulfilmentStatusType">
    <xsd:annotation>
      <xsd:documentation>The fulfilment status of the order.
			F = Fulfilled
			N = Not Initiated
			P = Processing
			W = Waiting for Future Dated Transaction, for example waiting until the delivery date specified by the customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="telNumberType">
    <xsd:annotation>
      <xsd:documentation>Representation of a phone number.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="25"/>
      <xsd:minLength value="9"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="legalEntityAddressType">
    <xsd:annotation>
      <xsd:documentation>The Legal entity address details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:choice>
        <xsd:element name="contactName" type="cpd:contactNameType"/>
        <xsd:element name="companyName" type="cpd:companyNameType">
          <xsd:annotation>
            <xsd:documentation/>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="address" type="cpd:addressType"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="contactNameType">
    <xsd:annotation>
      <xsd:documentation>The Customer or Contact's name details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="title">
        <xsd:annotation>
          <xsd:documentation>The Customer or Contact's Title</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="100"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="forename">
        <xsd:annotation>
          <xsd:documentation>The Customer or Contact's First Name</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
            <xsd:pattern value=" [A-Z,a-z,0-9,\-,\s][A-Z,a-z,0-9,\-,.,\s,']* "/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="surname">
        <xsd:annotation>
          <xsd:documentation>The Customer or Contact's Surname</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1"/>
            <xsd:maxLength value="100"/>
            <xsd:pattern value="[A-Z,a-z,0-9,\-,\s][A-Z,a-z,0-9,\-,.,\s,']*"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="companyNameType">
    <xsd:annotation>
      <xsd:documentation>For SME's, the Trading Name of the Company. Maps to EAI
				OIP DB ORDER_PARTY.COMPANY_NAME</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="productIdType">
    <xsd:annotation>
      <xsd:documentation>The catologue identifier for a product</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnTimestampType">
    <xsd:annotation>
      <xsd:documentation>The date and time the phyiscal item has been returned</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnOrderNumberType">
    <xsd:annotation>
      <xsd:documentation>The External Order Number for the order that returned
				the item.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="assignedProductBillingFrequency">
    <xsd:annotation>
      <xsd:documentation>The billing frequency used when billing for an assigned
				product. Currently only used for insurance products. O -
				One Off M - Monthly Recurring</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="O"/>
      <xsd:enumeration value="M"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnEventTypeCodeType">
    <xsd:annotation>
      <xsd:documentation>The code for the return event type.This field will
				always be blank for return codes of type RETURN. For
				return codes of type RTS this will be set to one of the
				following values: DELIVERY REFUSED NO ANSWER AT
				DESTINATION NO SUCH ADDRESS NO REASON STATED</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="returnEventTypeDescriptionType">
    <xsd:annotation>
      <xsd:documentation>The text description for the return event type.This
				field will always be blank for return codes of type
				RETURN. For return codes of type RTS this will be set to
				one of the following values: DELIVERY REFUSED NO ANSWER
				AT DESTINATION NO SUCH ADDRESS NO REASON STATED</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="DELIVERY REFUSED NO ANSWER AT DESTINATION NO SUCH ADDRESS NO REASON STATED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnReasonDescriptionType">
    <xsd:annotation>
      <xsd:documentation>The text description of the reason for return. This is
				the high level return reason for example "0 to 14 day
				Faulty Cancel"</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="200"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnReasonSubTypeDescriptionType">
    <xsd:annotation>
      <xsd:documentation>Text description of the sub-reason for return. This is
				the low level return reason for example 'Backlight
				fault'.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="200"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="XSDSimpleType">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="destinationNameType">
    <xsd:annotation>
      <xsd:documentation>Delivery destination, name of person. Default is the
				user name</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="placedByCustomerNumberType">
    <xsd:annotation>
      <xsd:documentation>The unique internal identifier for the customer that is
				legally responsible for this account. May be either an
				individual or a company.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="18"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="legalEntityCustomerNumberType">
    <xsd:annotation>
      <xsd:documentation>The identifier for the customer who placed the order.The
				Horizon Customer Number for the Legal Entity</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="18"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!--End of orderDataType-->
  <xsd:simpleType name="returnReasonCodeType">
    <xsd:annotation>
      <xsd:documentation>Code representing the reason for return.
			This is the high level return reason for example the 103 representing "0 to 14 day Faulty Cancel"</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="returnReasonSubTypeCodeType">
    <xsd:annotation>
      <xsd:documentation>Code representing the sub-reason for return.
				This is the low level return reason, for example 3 representing a backlight fault.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="changeType">
    <xsd:annotation>
      <xsd:documentation>The type of change to apply to an assigned product
				Change of A - add, U - update or R - remove. For example
				a class 9 bar 'product' can be added or removed. The
				default is A add.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A"/>
      <xsd:enumeration value="U"/>
      <xsd:enumeration value="R"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="streetType">
    <xsd:annotation>
      <xsd:documentation>The street name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="requestedDispatchDateType">
    <xsd:annotation>
      <xsd:documentation>For a future dated delivery. Date the order will need to
				be sent to the logistics warehouse to achieve the
				requested delivery date</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="ssn">
    <xsd:annotation>
      <xsd:documentation>Sim Serial Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="assignedProductBillingFreq">
    <xsd:annotation>
      <xsd:documentation>The billing frequency used when billing for an assigned
				product. Currently only used for insurance products. 
				O - One Off 
				M - Monthly Recurring</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1"/>
      <xsd:enumeration value="O"/>
      <xsd:enumeration value="M"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="idType">
    <xsd:annotation>
      <xsd:documentation>Allowed values are:
         	CHEQUE
         	FULL DRIVING LICENCE
         	NI DRIVING LICENCE
         	PASSPORT
         	BANK/STORE CARD
         	FIREARMS LICENSE
         	PURCHASE ORDER
         	BUSINESS HEADED LETTER
         	PROVISIONAL DRIVING LICENCE
			ARMED FORCES ID</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
      <xsd:enumeration value="CHEQUE"/>
      <xsd:enumeration value="FULL DRIVING LICENCE"/>
      <xsd:enumeration value="NI DRIVING LICENCE"/>
      <xsd:enumeration value="PASSPORT"/>
      <xsd:enumeration value="BANK/STORE CARD"/>
      <xsd:enumeration value="FIREARMS LICENSE"/>
      <xsd:enumeration value="PURCHASE ORDER"/>
      <xsd:enumeration value="BUSINESS HEADED LETTER"/>
      <xsd:enumeration value="PROVISIONAL DRIVING LICENCE"/>
      <xsd:enumeration value="ARMED FORCES ID"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="idValueType">
    <xsd:annotation>
      <xsd:documentation>Holds the actual identifing number id. For example a
				passport or credit card number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="dispatchDateType">
    <xsd:annotation>
      <xsd:documentation>Date that the item was dispatched</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="orderNumberBeingReturnedType">
    <xsd:annotation>
      <xsd:documentation>This order number relates to the previous order that
				needs a replacement performed for. i.e. number of the
				order in which the customer received the hardware that
				they are now returning.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="partnerType">
    <xsd:annotation>
      <xsd:documentation>The Partner Types. 
				agent				Agent Shop (Replacement)
				consumer			Online Customer
				CPW					Carphone Warehouse
				esme				ESME (not consumer)
				LBM2_in				Telesales - Customer Initiated
				LBM2_out			Telesales - O2 Initiated
				Mass_Distribution	Mass Distribution Shop (sim bundles)
				PHONES4U			Phones 4 U
				retail_shop			O2 Retail Stores
				TESCO				Tesco
				upgrade_consumer	Upgrade via Online Shop
				upgrade_csa			Upgrade via Agent</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="vatCodeDescriptionType">
    <xsd:annotation>
      <xsd:documentation>The sort of vat rate that should be applied. 
				STANDARD RATE 
				ZERO RATE 
				EXEMPT 
				OUTSIDE SCOPE 
				REDUCED RATE</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:enumeration value="STANDARD RATE"/>
      <xsd:enumeration value="ZERO RATE"/>
      <xsd:enumeration value="EXEMPT"/>
      <xsd:enumeration value="OUTSIDE SCOPE"/>
      <xsd:enumeration value="REDUCED RATE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="skuIDType">
    <xsd:annotation>
      <xsd:documentation>The unique identifier of the SKU (Stock Keeping
				Unit).Where the SKU cannot be identified this
				value will be set to UNKNOWN. Element will be empty if
				the Empty Bag Indicator is set</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="timeSlotType">
    <xsd:annotation>
      <xsd:documentation>Delivery option code that is valid for a given delivery
				date. The value returned in this field will be one of
				the following:
				NEXT DAY DELIVERY 
				NEXT DAY BEFORE 10:00
				NEXT DAY BEFORE 12:00 
				SATURDAY AM DELIVERY 
				SWAP IT 10
				SWAP IT SATURDAY</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NEXT DAY DELIVERY"/>
      <xsd:enumeration value="NEXT DAY BEFORE 10:00"/>
      <xsd:enumeration value="NEXT DAY BEFORE 12:00"/>
      <xsd:enumeration value="SATURDAY AM DELIVERY"/>
      <xsd:enumeration value="SWAP IT 10"/>
      <xsd:enumeration value="SWAP IT SATURDAY"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="deliveryDateType">
    <xsd:annotation>
      <xsd:documentation>Valid delivery date for the requested by the customer</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="requestedDespatchDateType">
    <xsd:annotation>
      <xsd:documentation>For a future dated delivery. Date the order will need to
				be sent to the logistics warehouse to achieve the
				requested delivery date</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date"/>
  </xsd:simpleType>
  <xsd:simpleType name="localityType">
    <xsd:annotation>
      <xsd:documentation>The area of a town or city that the street is in.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cityType">
    <xsd:annotation>
      <xsd:documentation>The town or city</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="countyType">
    <xsd:annotation>
      <xsd:documentation>The County</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="countryType">
    <xsd:annotation>
      <xsd:documentation>Country. Only allowed value is UK.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="UK"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="alpha2CountryCodeType">
    <xsd:annotation>
      <xsd:documentation>Postal Coutry should follows alpha 2 ISO standard. 
				Only allowed value is GB</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GB"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="saleableProductLineNumberType">
    <xsd:annotation>
      <xsd:documentation>Generated by the client to differentiate each saleable
				product in an order.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="saleableProductNameType">
    <xsd:annotation>
      <xsd:documentation>Saleable product name. It will be a concatenation of all
				assigned product names that this saleable product
				consists of.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="512"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnSaleableProductLineNumberType">
    <xsd:annotation>
      <xsd:documentation>The line number from the original order of the item that
				is being returned</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="returnAssignedProductNumberType">
    <xsd:annotation>
      <xsd:documentation>The assign number from the original order of the item
				that is being returned</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="overridePriceDescriptionType">
    <xsd:annotation>
      <xsd:documentation>A description of the reason for manually overriding a
				price if the price is not the same as the standard
				catalogue price. This free text description is supplied
				by an O2 employee such as an account manager not the end
				customer.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="vatRateType">
    <xsd:annotation>
      <xsd:documentation>The Value Added Tax (VAT) rate</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:double"/>
  </xsd:simpleType>
  <xsd:simpleType name="replacementAcceptStatusType">
    <xsd:annotation>
      <xsd:documentation>Indicates whether the replacement order request was
				accepted</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="returnConditionType">
    <xsd:annotation>
      <xsd:documentation>The code for the return condition of an item.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="NOT RETURNED"/>
      <xsd:enumeration value="DAMAGED"/>
      <xsd:enumeration value="FAULTY"/>
      <xsd:enumeration value="INCOMPLETE"/>
      <xsd:enumeration value="MISSING"/>
      <xsd:enumeration value="GOOD"/>
      <xsd:enumeration value="USED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="returnReasonOutOfPolicyUserNameType">
    <xsd:annotation>
      <xsd:documentation>The userId that has confirmed that the replacement may
				be out of policy</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="returnAuthorisationNumberType">
    <xsd:annotation>
      <xsd:documentation>The number given to a customer who wishes to return a
				device</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="replacementPolicyIdType">
    <xsd:annotation>
      <xsd:documentation>A 3-digit code that will indicate the policy decision regarding the replacement of customer's hardware item.
			This will be used while submitting a replacement order for the customer's hardware item.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="3"/>
      <xsd:maxLength value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="replacementPolicyCodeType">
    <xsd:annotation>
      <xsd:documentation>The Replacement Policy Code that determines whether customer is eligible to return the replacement.
			Code returned from Business Rules Validation.

			I- Within Policy ; 
			O – Not within Policy (but exchange or return can continue, and will be logged as such) ;
			D – Declined (the return or exchange must not take place); 
			Z – a policy ruling cannot be applied and local discretion applies (so exchange or return can continue, and will be logged as such)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1"/>
      <xsd:pattern value="[A-Za-z]"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="assignedProductNumberType">
    <xsd:annotation>
      <xsd:documentation>Differentiates each assigned product under a saleable
				product. Must be unique under each saleable product</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="dispatchStatusType">
    <xsd:annotation>
      <xsd:documentation>The status of the assigned product on an order.

				0 = Dispatch Requested 
				1 = Cancelled 
				2 = Cancelling 
				3 = Dispatch Not Cancelled 
				4 = Allocate Not Cancelled 
				5 = Dispatch Required 
				10 = Dispatched 
				11 = Allocated 
				12 = Deallocated 
				13 = Out Of Stock 
				99 = Dispatch Not Required</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="2"/>
      <xsd:enumeration value="3"/>
      <xsd:enumeration value="4"/>
      <xsd:enumeration value="5"/>
      <xsd:enumeration value="10"/>
      <xsd:enumeration value="11"/>
      <xsd:enumeration value="12"/>
      <xsd:enumeration value="13"/>
      <xsd:enumeration value="99"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="dispatchMethodType">
    <xsd:annotation>
      <xsd:documentation>The method used to dispatch the product. Allowed values
				are: 
				IMMD = Immediate Dispatch 
				EXCH = Wait On Exchange
				RETL = Pick Up In Retail 
				INFO = Information only. No Dispatch Required
				DSEX = Doorstep Exchange</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="IMMD"/>
      <xsd:enumeration value="EXCH"/>
      <xsd:enumeration value="RETL"/>
      <xsd:enumeration value="INFO"/>
      <xsd:enumeration value="DSEX"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="riskType">
    <xsd:annotation>
      <xsd:documentation>Perceived risk for handsets (category = HAN): 
				0 – Sim only 
				1 – Normal Handset Risk 
				2 – High Handset Risk 
				3 – Not a Handset 
				
				Perceived risk for accessories (category = ACC): 
				0 – Low Risk 
				1 – Normal Handset Risk 
				2 – High Handset Risk</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:short">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
      <xsd:enumeration value="2"/>
      <xsd:enumeration value="3"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="paymentMoneyType">
    <xsd:annotation>
      <xsd:documentation>The value of a payment, specified in pence with no
				punctuation</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"/>
  </xsd:simpleType>
  <xsd:simpleType name="itemCategoryType">
    <xsd:annotation>
      <xsd:documentation>Category of the item.
				ACC = ACCESSORY
				CDO = CHARGEABLE DELIVERY OPTION
				CON = CONSULTANCY
				HAN = HANDSET
				L2M = BULK LAND TO MOBILE
				LIT = LITERATURE
				POL = POSTPAY LOGICAL PRODUCT
				POI = POSTPAY INSURANCE 
				POS = POSTPAY SIM
				POT = POSTPAY TARIFF
				PRI = PREPAY INSURANCE
				PRL = PREPAY LOGICAL PRODUCT
				PRS = PREPAY SIM
				PRT = PREPAY TARIFF
				PTM = PREMIER TEXT MESSAGING
				REV = SOFTWARE REVALIDATION 
				SAD = SOURCE ADDRESS
				SDC = Standard Delivery Charge
				TAM = Tariff Modifier</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="ACC"/>
      <xsd:enumeration value="CDO"/>
      <xsd:enumeration value="CON"/>
      <xsd:enumeration value="HAN"/>
      <xsd:enumeration value="L2M"/>
      <xsd:enumeration value="LIT"/>
      <xsd:enumeration value="POI"/>
      <xsd:enumeration value="POL"/>
      <xsd:enumeration value="POS"/>
      <xsd:enumeration value="POT"/>
      <xsd:enumeration value="PRI"/>
      <xsd:enumeration value="PRL"/>
      <xsd:enumeration value="PRS"/>
      <xsd:enumeration value="PRT"/>
      <xsd:enumeration value="PTM"/>
      <xsd:enumeration value="REV"/>
      <xsd:enumeration value="SAD"/>
      <xsd:enumeration value="SDC"/>
      <xsd:enumeration value="TAM"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="accountSetReferenceType">
    <xsd:annotation>
      <xsd:documentation>The unique identifier for account details. 
				This is used to allow the same account details to be associated 
				with multiple products without having to repeat the account details.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="chargeToCrossChargeAccountReferenceType">
    <xsd:annotation>
      <xsd:documentation>The account number unique identifier, 
				as allocated by the requester that the charge is to be put on,
				It will map to a accountSetReference element.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="makeType">
    <xsd:annotation>
      <xsd:documentation>Make of the a generic piece of Hardware, may be an Accessory or SIM for example</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="modelType">
    <xsd:annotation>
      <xsd:documentation>Model of the a generic piece of Hardware, may be an Accessory or SIM for example</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="lastPaymentOrigin">
    <xsd:annotation>
      <xsd:documentation>Field indicating the originof the payment. Can be:
				PHYSICAL PAYMENT, WRITE OFF MANUAL,WRITE OFF AUTOMATIC,
				BALANCE TRANSFER, DEPOSIT APPLIED</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="lastPaymentStatus">
    <xsd:annotation>
      <xsd:documentation>The status of the last payment Successful, Cancelled,
				Failed.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="lastPaymentMethod">
    <xsd:annotation>
      <xsd:documentation>The payment method last associated with the entity</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="currencyType">
    <xsd:annotation>
      <xsd:documentation>Payment currency type. Allowed value is GBP.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="GBP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="userAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>Type for user account number.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="6"/>
      <xsd:maxLength value="12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="telephoneContactType">
    <xsd:annotation>
      <xsd:documentation>Telephone contact type</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="telephoneNumber" type="cpd:telNumberType">
        <xsd:annotation>
          <xsd:documentation>Contact telephone number.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="extensionNumber" type="cpd:extensionNumberType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Contact extension number for the telephone.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="addressFormatType">
    <xsd:annotation>
      <xsd:documentation>Address format type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="2"/>
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positionType">
    <xsd:annotation>
      <xsd:documentation>Position type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="departmentType">
    <xsd:annotation>
      <xsd:documentation>Department type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="40"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="extensionNumberType">
    <xsd:annotation>
      <xsd:documentation>Extension number type.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="initialsType">
    <xsd:annotation>
      <xsd:documentation>The Customer or Contact's initial value.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="firstNameType">
    <xsd:annotation>
      <xsd:documentation>The Customer or Contact's First Name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="lastNameType">
    <xsd:annotation>
      <xsd:documentation>The Customer or Contact's Last Name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="100"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeHorizonId">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeHorizonDomain">
    <xsd:annotation>
      <xsd:documentation>This is the common registry domain name for the user.
				Maps to EAI OIP DB ORDER_PARTY.PORTAL_ID_DOMAIN</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeDescriptionSize50">
    <xsd:annotation>
      <xsd:documentation>Generic type that can be used for an string field, max
				length 50.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="vatAmountType">
    <xsd:annotation>
      <xsd:documentation>The VAT rate to calculate the VAT amount on the price.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="vatAmount" type="cpd:paymentMoneyType"/>
      <xsd:element name="vatRate" type="xsd:double"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="vatReversalReceiptStatusType">
    <xsd:annotation>
      <xsd:documentation>The status of the VAT reversal.Values: 'R' - Ready for
				production 'P' - Receipt produced 'N' - Not Applicable
				'X' - Receipt not required.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="1"/>
      <xsd:enumeration value="R"/>
      <xsd:enumeration value="P"/>
      <xsd:enumeration value="N"/>
      <xsd:enumeration value="X"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="residenceType">
    <xsd:annotation>
      <xsd:documentation>FULL DRIVING LICENCE,NI DRIVING LICENCE,UTILITY
				BILL,BANK STATEMENT, BUILDING SOCIETY STATEMENT,CREDIT
				CARD STATEMENT,INSURANCE POLICY,MAIL ORDER STATEMENT,
				FAMILY ALLOWANCE BOOK,MORTGAGE REPAYMENT
				STATEMENT,COUNCIL TAX STATEMENT,SORT CODE</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="30"/>
      <xsd:enumeration value="FULL DRIVING LICENCE"/>
      <xsd:enumeration value="NI DRIVING LICENCE"/>
      <xsd:enumeration value="UTILITY BILL"/>
      <xsd:enumeration value="BANK STATEMENT"/>
      <xsd:enumeration value="BUILDING SOCIETY STATEMENT"/>
      <xsd:enumeration value="CREDIT CARD STATEMENT"/>
      <xsd:enumeration value="INSURANCE POLICY"/>
      <xsd:enumeration value="MAIL ORDER STATEMENT"/>
      <xsd:enumeration value="FAMILY ALLOWANCE BOOK"/>
      <xsd:enumeration value="MORTGAGE REPAYMENT STATEMENT"/>
      <xsd:enumeration value="COUNCIL TAX STATEMENT"/>
      <xsd:enumeration value="SORT CODE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="lineNumberType">
    <xsd:annotation>
      <xsd:documentation>Used in conjunction with oid to identify a particular
				order line.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
      <xsd:pattern value="\d{1,10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="skuType">
    <xsd:annotation>
      <xsd:documentation>SKU Type. e.g. 044-01-01-002-0005-0001-0001-003.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="50"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeDescriptionSize20">
    <xsd:annotation>
      <xsd:documentation>Generic type that can be used for an string field, max
				length 20.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeDescriptionSize80">
    <xsd:annotation>
      <xsd:documentation>Generic type that can be used for an string field, max
				length 80.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="80"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeCreditCardNumber">
    <xsd:annotation>
      <xsd:documentation>Representation of a credit card number.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="12"/>
      <xsd:maxLength value="20"/>
      <xsd:pattern value="\d{12,20}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="typeCardIssueNumber">
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="3"/>
      <xsd:pattern value="\d{1,3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="horizonHouseNumberType">
    <xsd:annotation>
      <xsd:documentation>The house number is restricted to 20 chars.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="creditClassIdType">
    <xsd:annotation>
      <xsd:documentation>The credit class to which this account belongs for the purpose of debt escalation [collections].It must be a valid identifier of a credit class that currently exists in the database. It must not be null.
			The values are:
			1=Consumer - High Risk
			2=Consumer - Medium Risk
			3=Consumer - Low Risk
			4=Consumer - High Risk
			5=Consumer - Medium Risk
			6=Consumer - Low Risk
			7=Consumer Cheque High Risk
			8=Consumer Cheque Low Risk
			9=Consumer DD or CCA
			10=SME Cheque High Risk
			11=SME Cheque Low Risk
			12=SME DD or CCA</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="paymentMethodType">
    <xsd:annotation>
      <xsd:documentation>Indicates the method of payment for the recurring payment details e.g. card, bank or Geneva account.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="CARD"/>
      <xsd:enumeration value="BANK"/>
      <xsd:enumeration value="GENEVA"/>
      <xsd:enumeration value="MTBILLING"/>
      <xsd:enumeration value="CHEQUE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="orderStatusType">
    <xsd:annotation>
      <xsd:documentation>Indicates the order status.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="61"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="proofOfIdType">
    <xsd:annotation>
      <xsd:documentation>Proof of Id details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="idType" type="cpd:idType">
        <xsd:annotation>
          <xsd:documentation>Allowed values are:
		         	CHEQUE
		         	FULL DRIVING LICENCE
		         	NI DRIVING LICENCE
		         	PASSPORT
		         	BANK/STORE CARD
		         	FIREARMS LICENSE
		         	PURCHASE ORDER
		         	BUSINESS HEADED LETTER
		         	PROVISIONAL DRIVING LICENCE
					ARMED FORCES ID</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="data" type="cpd:stringSize255"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="proofOfResidenceType">
    <xsd:annotation>
      <xsd:documentation>Proof of residence details.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="residenceType" type="cpd:residenceType">
        <xsd:annotation>
          <xsd:documentation>FULL DRIVING LICENCE,
         				NI DRIVING LICENCE,
         				UTILITY BILL,
         				BANK STATEMENT, 
         				BUILDING SOCIETY STATEMENT,
         				CREDIT CARD STATEMENT,
         				INSURANCE POLICY,
         				MAIL ORDER STATEMENT,
						FAMILY ALLOWANCE BOOK,
						MORTGAGE REPAYMENT STATEMENT,
						COUNCIL TAX STATEMENT,
						SORT CODE</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="data" type="cpd:stringSize255"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="orderLineKeyType">
    <xsd:annotation>
      <xsd:documentation>Identifies a particular order line.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="orderId" type="cpd:orderIdType">
        <xsd:annotation>
          <xsd:documentation>Key to the order that the order line belongs to.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="lineNumber" type="cpd:lineNumberType">
        <xsd:annotation>
          <xsd:documentation>Order line within the order.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="orderIdType">
    <xsd:annotation>
      <xsd:documentation>Representation of an order ID. It can also be used
				in conjunction with a line number to identify a
				particular package or item within an order.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
      <xsd:pattern value="\d{1,10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="assignNumberType">
    <xsd:annotation>
      <xsd:documentation>Representation of assigned product number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="10"/>
      <xsd:pattern value="\d{1,10}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="shortCodeType">
    <xsd:annotation>
      <xsd:documentation>Short code</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="4"/>
      <xsd:maxLength value="8"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/manageorderservice_1_0.wsdl</con:url><con:content><![CDATA[<!--Date            Change#       Author            Change Description-->
<!--28/08/2009  	1.0.1         Shiby Varghese	Lead review comments incorporated-->
<!--12/08/2009  	1.0.0         Shiby Varghese	Initial Version-->
<wsdl:definitions name="ManageOrder" targetNamespace="http://soa.o2.co.uk/manageorderservice_1" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:mod="http://soa.o2.co.uk/manageorderdata_1" xmlns:mos="http://soa.o2.co.uk/manageorderservice_1">
  <wsdl:types>
    <xsd:schema>
      <xsd:import namespace="http://soa.o2.co.uk/manageorderdata_1" schemaLocation="manageorderdata_1_0.xsd"/>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getOrderList">
    <wsdl:part name="getOrderList" element="mod:getOrderList"/>
  </wsdl:message>
  <wsdl:message name="getOrderListResponse">
    <wsdl:part name="getOrderListResponse" element="mod:getOrderListResponse"/>
  </wsdl:message>
  <wsdl:message name="getOrderListFault">
    <wsdl:part name="getOrderListFault" element="mod:getOrderListFault"/>
  </wsdl:message>
  <wsdl:message name="getOrderDetails">
    <wsdl:part name="getOrderDetails" element="mod:getOrderDetails"/>
  </wsdl:message>
  <wsdl:message name="getOrderDetailsResponse">
    <wsdl:part name="getOrderDetailsResponse" element="mod:getOrderDetailsResponse"/>
  </wsdl:message>
  <wsdl:message name="getOrderDetailsFault">
    <wsdl:part name="getOrderDetailsFault" element="mod:getOrderDetailsFault"/>
  </wsdl:message>
  <wsdl:portType name="ManageOrderPortType">
    <wsdl:operation name="getOrderList">
      <wsdl:input name="getOrderList" message="mos:getOrderList"/>
      <wsdl:output name="getOrderListResponse" message="mos:getOrderListResponse"/>
      <wsdl:fault name="getOrderListFault" message="mos:getOrderListFault"/>
    </wsdl:operation>
    <wsdl:operation name="getOrderDetails">
      <wsdl:input name="getOrderDetails" message="mos:getOrderDetails"/>
      <wsdl:output name="getOrderDetailsResponse" message="mos:getOrderDetailsResponse"/>
      <wsdl:fault name="getOrderDetailsFault" message="mos:getOrderDetailsFault"/>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ManageOrderBinding" type="mos:ManageOrderPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getOrderList">
      <soap:operation soapAction=""/>
      <wsdl:input name="getOrderList">
        <soap:body parts="getOrderList" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrderListResponse">
        <soap:body parts="getOrderListResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getOrderListFault">
        <soap:fault name="getOrderListFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getOrderDetails">
      <soap:operation soapAction=""/>
      <wsdl:input name="getOrderDetails">
        <soap:body parts="getOrderDetails" use="literal"/>
      </wsdl:input>
      <wsdl:output name="getOrderDetailsResponse">
        <soap:body parts="getOrderDetailsResponse" use="literal"/>
      </wsdl:output>
      <wsdl:fault name="getOrderDetailsFault">
        <soap:fault name="getOrderDetailsFault" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ManageOrder">
    <wsdl:port name="ManageOrderPort" binding="mos:ManageOrderBinding">
      <soap:address location="https://sdpapi.o2.co.uk/services/ManageOrder_1_0"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://svn01.dev.o2.co.uk/versionControl/main/soa-factory/alsb/NorthBoundInterfaces/trunk/NorthBoundInterfaces/NorthBoundInterfaces/coredata_1_1.xsd</con:url><con:content><![CDATA[<!--Date            Version       Author            	 Change Description

	18/08/2009  	1.0.3         Karthikeyan R D       Added types for bank account number, sort code and account holder name.
	25/06/2009  	1.0.2         Venkata Karhtik      	Added types for credit/debit card related elements, customerTier,emailAddressType and postcode
	12/04/2008  	1.0.1         Kapil Gosian       	Initial version-->
<xsd:schema targetNamespace="http://soa.o2.co.uk/coredata_1" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xcore="http://soa.o2.co.uk/coredata_1">
  <xsd:complexType name="SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The type of the response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SOAFaultOriginator"/>
      <xsd:element ref="xcore:SOAFaultCode"/>
      <xsd:element name="faultDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A human readable description of the error.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="faultTrace" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>A computer generated dump of the fault (may help in debugging problems).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:SOATransactionID" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="SOAFault" type="xcore:SOAFaultType">
    <xsd:annotation>
      <xsd:documentation>The response sent to the calling application, if something goes wrong.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A numeric representation of a fault (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAFaultOriginator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A representation of where a fault originates (should be included in errors.xml).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOATransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The transaction ID generated by the ESB.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SOAConsumerTransactionID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>A transaction ID supplied by the calling aplication. It will not be processed but is passed through and logged by all underlying services (aids in debugging problems).</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="msisdnType">
    <xsd:annotation>
      <xsd:documentation>Mobile Phone numbers (MSISDNs) should always be defined as strings, including country codes i.e. "447734123456"; and translated into localised formats on the presentation and backend layers.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="billingAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>A billing account, as it appears in the back end billing system (Companion).</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="6"/>
      <xsd:maxLength value="20"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="portalIDType">
    <xsd:annotation>
      <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="accountType">
    <xsd:annotation>
      <xsd:documentation>Data type to define a customers account. This could be either a portal account, msisdn, or a companion account and msisdn. Or a Bank Account program ID and account ID (initially for Timberlake)</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="portalID" type="xcore:portalIDType">
        <xsd:annotation>
          <xsd:documentation>A portal account, normally in the form "john.smith@o2.co.uk".</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>A msisdn, in international format i.e. "447712345678"</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountDetail" type="xcore:accountDetail">
        <xsd:annotation>
          <xsd:documentation>Account Details</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:complexType name="accountDetail">
    <xsd:annotation>
      <xsd:documentation>Account Details</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="billingAccountType">
        <xsd:annotation>
          <xsd:documentation>The type of account as it is defined in the billing system (only "MOBILE" currently defined).</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="MOBILE"/>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="accountNumber" type="xcore:billingAccountNumberType">
        <xsd:annotation>
          <xsd:documentation>The companion account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="msisdn" type="xcore:msisdnType">
        <xsd:annotation>
          <xsd:documentation>The msisdn within the above account.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="customerIDType">
    <xsd:annotation>
      <xsd:documentation>Main customerID for online services - this is the o2BFid in CPDS at the moment</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:complexType name="cashCardAccountType">
    <xsd:annotation>
      <xsd:documentation>Uniquely identifies the account in the Prepaid Banking system that is being referred to.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:annotation>
        <xsd:documentation>Financial accounts need a programID and accountID (Ref: Timberlake)</xsd:documentation>
      </xsd:annotation>
      <xsd:element name="programID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Identifies program. Translates into "Smart" or "Freedom" with various limits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="accountID" type="xsd:long">
        <xsd:annotation>
          <xsd:documentation>Unique internal account ID on the TSYS platform. Probably can be applied to other banking systems as well.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="userID" type="xsd:long" minOccurs="0"/>
      <xsd:element name="cardID" type="xsd:long" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="productIDType">
    <xsd:annotation>
      <xsd:documentation>Identifies a product - temporarily the same as o2BFID (and hence customer ID)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="customerRoleType">
    <xsd:annotation>
      <xsd:documentation>The role concept from registration DB or A and R</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="admin"/>
      <xsd:enumeration value="user"/>
      <xsd:enumeration value="chooser"/>
      <xsd:enumeration value="superuser"/>
      <xsd:enumeration value="unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="imsiType">
    <xsd:annotation>
      <xsd:documentation>IMSI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="imeiType">
    <xsd:annotation>
      <xsd:documentation>IMEI Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="subscriberProfile" type="xcore:SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Subscriber Profile Element</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="SubscriberProfileType">
    <xsd:annotation>
      <xsd:documentation>Complex Type that defines Subscriber Profile</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element ref="xcore:SubscriberID">
        <xsd:annotation>
          <xsd:documentation>This refers to the MSISDN for Mobile subscribers</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Operator" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Operator ID for the particular subscriber</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:PaymentCategory" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Type of payment, Prepay of Postpay</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element ref="xcore:Segment" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>Segment of Subscriber, corporate, consumer, ISP etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="channel" type="xsd:string" minOccurs="0"/>
      <xsd:element name="ServiceProviderID" type="xsd:long" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>SPID which is a unique value for the type of O2 Service Provider like Tesco, CPW etc.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="Status" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:element name="Operator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>O2 UK, Tesco or Other normally</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Segment" type="xcore:SegmentType">
    <xsd:annotation>
      <xsd:documentation>The P and L definition of Consumer/SME/Corp</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="SegmentType">
    <xsd:annotation>
      <xsd:documentation>main ones listed - could be others</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Consumer"/>
      <xsd:enumeration value="SME"/>
      <xsd:enumeration value="Corporate"/>
      <xsd:enumeration value="ISP"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="Channel" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The sales channel that owns the subscriber</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SubscriberID" type="xcore:msisdnType">
    <xsd:annotation>
      <xsd:documentation>Subscriber ID that is unique identifier of the subscriber eg: MSISDN no is subscriberID for Mobile users</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PaymentCategory" type="xcore:PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>Divides between pay and go/pay monthly</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="PaymentCategoryType">
    <xsd:annotation>
      <xsd:documentation>two values postpay or prepay</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Prepay"/>
      <xsd:enumeration value="Postpay"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="ServiceResultType">
    <xsd:annotation>
      <xsd:documentation>This data type represents the status recieved from a service for a task that might be earlier assigned to that service.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="statusCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A unique code assigned to the status from the service. A set of status codes can be defined for services based on the context.
				                   A stausCode will be suffixed with "S" for success, "F" for failure and "E" for Error and "P" for Pending to describe the type of status recieved from service.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="externalDescription" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>A description of status in human-readble form that has to be sent to the end-user.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="internalDescription" type="xsd:string" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>This is an optional description of the status which is meant for logging purpose. This may contain the java stack trace or Database error trace based on the context.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapItem">
    <xsd:annotation>
      <xsd:documentation>An individual Item that carries key-value pair for extensible properties</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="key" type="xsd:string"/>
      <xsd:choice>
        <xsd:annotation>
          <xsd:documentation>Only the relevant elemt is populated based on the type of the parameter.</xsd:documentation>
        </xsd:annotation>
        <xsd:element name="intValue" type="xsd:integer"/>
        <xsd:element name="strValue" type="xsd:string"/>
        <xsd:element name="boolValue" type="xsd:boolean"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="MapType">
    <xsd:annotation>
      <xsd:documentation>A generic extensible complex type that can be used to send multiple name-value pairs</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mapItem" type="xcore:MapItem" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="StatusCodeType">
    <xsd:annotation>
      <xsd:documentation>This is borrowed from SPML definition of a status code - the pending status is  a bit debatable</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="success"/>
      <xsd:enumeration value="failure"/>
      <xsd:enumeration value="error"/>
      <xsd:enumeration value="pending"/>
      <xsd:enumeration value="expired"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:element name="applicationID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>applicationID is part of request identifier handled by SOA Access Gateway. Application ID uniquely identifies the name of consuming application. Example - DASHB, IVR, WAP, etc</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="providerID" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>providerID is also part of request identifier handled by SOA Access Gateway. Provider ID identifies the company that provides a functionality to end customers by invoking this specific service. Example - O2, Tesco, Car Phone Warehouse</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="originatorIP" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates the IP address of the originating system. This parameter will be added by the SOA Access Gateway</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="mobileAccessIdType">
    <xsd:annotation>
      <xsd:documentation>Mobile Access Id is Hash id which is same as the UID generated by Wap Gateway</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:element name="debugFlag" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This parameter indicates whether we should log or not, Used for debugging perspective from a Support Perspective.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:simpleType name="cardHolderNameType">
    <xsd:annotation>
      <xsd:documentation>The customer name on the Credit or Debit Card</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssueDateType">
    <xsd:annotation>
      <xsd:documentation>The date when the card was issued. In MM/YY format.
       		It is important that the month comes first followed by the year.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
      <xsd:pattern value="\d{2}/\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardExpiryDateType">
    <xsd:annotation>
      <xsd:documentation>The card expiry date. In MM/YY format.
       		It is important that the month comes first followed by the year.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
      <xsd:pattern value="\d{2}/\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardNumberType">
    <xsd:annotation>
      <xsd:documentation>The Credit/Debit Card Number(without spaces)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{12,20}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardCV2Type">
    <xsd:annotation>
      <xsd:documentation>The verification number printed on the back of the credit/debit card.
			The CardCV2 usually  a 3 or 4 digit code on the back of card.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="5"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssueNumberType">
    <xsd:annotation>
      <xsd:documentation>The Credit or Debit Card Issue Number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1"/>
      <xsd:maxLength value="2"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="cardIssuerType">
    <xsd:annotation>
      <xsd:documentation>The Bank Card Issuer</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="MAESTRO"/>
      <xsd:enumeration value="SOLO"/>
      <xsd:enumeration value="VISA"/>
      <xsd:enumeration value="MASTERCARD"/>
      <xsd:enumeration value="DELTA"/>
      <xsd:enumeration value="AMEX"/>
      <xsd:enumeration value="ELECTRON"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="customerTierType">
    <xsd:annotation>
      <xsd:documentation>Customer friendly description for various segmentation keys.
        		Allowed values are Platinum, Gold, Silver, Bronze, Blue, Unknown
				
				Segmentation Key		Customer Tier value
				Platinum				Platinum
				Gold					Gold
				Silver					Silver
				Bronze					Bronze
				Select					Gold
				none					Blue
				Sel_Inv					Silver
				Sel_Few					Platinum</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Platinum"/>
      <xsd:enumeration value="Gold"/>
      <xsd:enumeration value="Silver"/>
      <xsd:enumeration value="Bronze"/>
      <xsd:enumeration value="Blue"/>
      <xsd:enumeration value="Unknown"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="emailAddressType">
    <xsd:annotation>
      <xsd:documentation>The email address</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="postcodeType">
    <xsd:annotation>
      <xsd:documentation>The Postcode</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--v1.0.3: Adding bank related information-->
  <xsd:simpleType name="bankAccountNumberType">
    <xsd:annotation>
      <xsd:documentation>The Bank Account number</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <xsd:simpleType name="bankSortCodeType">
    <xsd:annotation>
      <xsd:documentation>The Bank Sort code.(Ex:40-42-08)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="8"/>
      <xsd:maxLength value="8"/>
      <xsd:pattern value="\d{2}(-)\d{2}(-)\d{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="bankAccountHolderNameType">
    <xsd:annotation>
      <xsd:documentation>The Bank Account holder name.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!--v1.0.3: Ends-->
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache></con:interface><con:testSuite name="ManageOrder_1_0:getOrderList Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Success Case" searchProperties="true" maxResults="0" id="d2044f2e-2c4f-404d-8c46-724a68913084"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_01"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a positive scenario which gives a success response for a valid customer number-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         
         <man:customerNumber>User001</man:customerNumber>
        
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="SOAP Response"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a positive scenario which gives a success response for a valid portal id-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
       
         <man:portalId>portalId</man:portalId>
       
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a positive scenario which gives a success response for a valid msisdn-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
        
         <man:msisdn>445588900001</man:msisdn>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Fault Case" searchProperties="true" maxResults="0" id="15f0e81f-69ba-4a7e-bdce-2d914a7c9009"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_01"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a negative scenario which gives a fault response for an invalid customer number-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <man:customerNumber>t9</man:customerNumber>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://soa.o2.co.uk/coredata_1';
declare namespace ns2='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='http://soa.o2.co.uk/coredata_1';
declare namespace ns2='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultstring )</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-2002-F</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:faultDescription)</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderListFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a negative scenario which gives a fault response for an invalid customer number-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
         <man:customerNumber>67sd</man:customerNumber>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultstring )</path><content>Internal service error. Please contact service support for help on this.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-2001-F</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:faultDescription)</path><content>Internal service error. Please contact service support for help on this.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderListFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a negative scenario which gives a fault response for an invalid customer number-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
      
         <man:customerNumber>User201</man:customerNumber>
        
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>200</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/data(faultstring )</path><content>No orders found for the given order identifier.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultOriginator)</path><content>GetOrderList Gateway</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-3000-E</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
//soapenv:Fault/detail/man:getOrderListFault/data(cor:faultDescription)</path><content>No orders found for the given order identifier.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace ns3='http://soa.o2.co.uk/manageorderservice_1';
declare namespace ns4='http://soa.o2.co.uk/pscommonpostpaydata_1';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderListFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Failure Case" searchProperties="true" maxResults="0" id="d656d496-1161-4757-808c-0894ea3ada42"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_01"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a negative scenario which gives a failure response for an invalid customer number which is against the xsd-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
         <man:customerNumber>ssssssssssssssssssssssssssssssssssssss</man:customerNumber>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--This is a negative scenario which gives a failure response for a request which doesnt have mandatoy element-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
     
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>?</man:startOrderNumber>
            <man:numOrdersRequired>?</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderList</con:operation><con:request name="ManageOrder_1_0:getOrderList_UT_03"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderList>
         <!--You have a CHOICE of the next 3 items at this level-->
         <man:portalId>portalId</man:portalId>
         <man:customerNumber>name002</man:customerNumber>
         <man:msisdn>05588900001</man:msisdn>
         <man:ordersSelectionCriteria>
            <man:startOrderNumber>100</man:startOrderNumber>
            <man:numOrdersRequired>100</man:numOrdersRequired>
         </man:ordersSelectionCriteria>
      </man:getOrderList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="ManageOrder_1_0:getOrderDetails Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Success Case" searchProperties="true" maxResults="0" id="3ab44cac-51d3-49ed-8ecb-7d1710924f6e"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--Request with the userId and one of the choice element orderNumber-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>393939</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>494949</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>494949</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-05-05</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--Request with the userId and one of the choice element msisdn-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>393939</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         
         <man:msisdn>07709400877</man:msisdn>
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>494949</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-05-05</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_03"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--Request with the userId and one of the choice element orderNumber-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>565656</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>9999</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>order_number</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-01-01</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_04"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_04"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--Request with the userId and one of the choice element orderNumber, response contains multiple recurringPaymentdetails elements-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>393939</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>11223</man:orderNumber>         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>11223</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-08-08</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_05"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_05"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--Request with the userId and one of the choice element orderNumber, response contains multiple package elements-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>787878</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>6555</man:orderNumber>         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>6555</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-05-05</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_06"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_06"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--Request with the userId and one of the choice element orderNumber with SOATransactionID-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cor="http://soa.o2.co.uk/coredata_1" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header>
      <cor:SOATransactionID>getOrderDetails-15269</cor:SOATransactionID>
   </soapenv:Header>
    <soapenv:Body>
         <man:getOrderDetails>
         <man:userId>393939</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>494949</man:orderNumber>
         
      </man:getOrderDetails>
      </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>494949</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-05-05</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_07"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_07"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--Request with the userId and one of the choice element orderNumber with SOATransactionID-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cor="http://soa.o2.co.uk/coredata_1" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header>
      <cor:SOATransactionID>getOrderDetails-25269</cor:SOATransactionID>
   </soapenv:Header>
    <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>565656</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>9999</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>order_number</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-01-01</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_08"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_08"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--Request with the userId and one of the choice element orderNumber with SOATransactionID-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cor="http://soa.o2.co.uk/coredata_1" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header>
      <cor:SOATransactionID>getOrderDetails-35269</cor:SOATransactionID>
   </soapenv:Header>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>787878</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>6555</man:orderNumber>         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="XPath Match" name="orderNumber - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderNumber)</path><content>6555</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="oredrType - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderType)</path><content>NE</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderDate - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderDate)</path><content>2001-05-05</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="orderTotalAmount - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderHeaderDetails/data(man:orderTotalAmount)</path><content>0</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="VATReceiptRequired - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace psc='http://soa.o2.co.uk/pscommonpostpaydata_1';
//man:getOrderDetailsResponse/man:orderDetails/data(man:VATReceiptRequired)</path><content>Y</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Fault Case" searchProperties="true" maxResults="0" id="f9100304-b3eb-4213-b6b1-ede42e9de47c"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--manageorder-36600-2002:Backend Internal error. Please try again later.-F-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>232323</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>222</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultstring)</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-2002-F</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:faultDescription)</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderDetailsFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--manageorder-36600-2002-F:Backend Internal error. Please try again later-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>232323</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         
         <man:msisdn>07709400888</man:msisdn>
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultstring)</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-2002-F</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:faultDescription)</path><content>Backend Internal error. Please try again later.</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderDetailsFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_03"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_03"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[ <!--manageorder-36600-3001-E:No order details found for the given order identifier.-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>676767</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>898</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultstring)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-3001-E</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:faultDescription)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderDetailsFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_04"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_04"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--manageorder-36600-3001-E:No order details found for the given order identifier.-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>676767</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         
         <man:msisdn>07803997574</man:msisdn>
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultstring)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultOriginator)</path><content>CUK</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-3001-E</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:faultDescription)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderDetailsFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_05"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_05"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<!--manageorder-36600-3001-E:No order details found for the given order identifier.-->
<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>85422</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>595</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/><con:assertion type="XPath Match" name="faultcode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultcode)</path><content>env:Server</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultstring - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/data(faultstring)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultOriginator - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultOriginator)</path><content>Route To UtilGetOrderDetails.utilGetOrderDetails</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOAFaultCode - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:SOAFaultCode)</path><content>manageorder-36600-3001-E</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="faultDescription - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';
//soapenv:Fault/detail/man:getOrderDetailsFault/data(cor:faultDescription)</path><content>No order details found for the given order identifier</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XPath Match" name="SOATransactionID - XPath Match"><con:configuration><path>declare namespace cor='http://soa.o2.co.uk/coredata_1';
declare namespace soapenv='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace man='http://soa.o2.co.uk/manageorderdata_1';
declare namespace env='http://schemas.xmlsoap.org/soap/envelope';

if (//soapenv:Header/cor:SOATransactionID/string() = //soapenv:Fault/detail/man:getOrderDetailsFault/cor:SOATransactionID/string() ) then 'true' else' false'</path><content>true</content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Failure Case" searchProperties="true" maxResults="0" id="08bb3a2f-bbd9-419b-8b92-fc15c43b2ca2"><con:settings/><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_01"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>?</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>?</man:orderNumber>
         <man:msisdn>?</man:msisdn>
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/></con:request></con:config></con:testStep><con:testStep type="request" name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>ManageOrderBinding</con:interface><con:operation>getOrderDetails</con:operation><con:request name="ManageOrder_1_0:getOrderDetails_UT_02"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://baku.dev.o2.co.uk:7001/services/ManageOrder_1_0</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:man="http://soa.o2.co.uk/manageorderdata_1">
   <soapenv:Header/>
   <soapenv:Body>
      <man:getOrderDetails>
         <man:userId>545646546556655565665454dhfghfghfg5hfg5hfg5hfg5h4</man:userId>
         <!--You have a CHOICE of the next 2 items at this level-->
         <man:orderNumber>5465545fgbdfgdfg</man:orderNumber>
         
      </man:getOrderDetails>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="Not SOAP Fault Assertion"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/></con:soapui-project>